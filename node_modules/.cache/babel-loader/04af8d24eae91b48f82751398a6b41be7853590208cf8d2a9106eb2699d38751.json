{"ast":null,"code":"var _jsxFileName = \"/Users/charliemclaughlin/Desktop/Programming/GitHub/piggle/src/components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\"; // Firestore functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [highscore, setHighscore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const auth = getAuth();\n      const db = getFirestore();\n      const user = auth.currentUser;\n      if (user) {\n        const userRef = doc(db, \"users\", user.uid);\n        const docSnap = await getDoc(userRef);\n        if (docSnap.exists()) {\n          const userData = docSnap.data();\n          setUsername(userData.username);\n          setHighscore(userData.highscore);\n        } else {\n          console.log(\"User document not found\");\n        }\n      }\n      setLoading(false);\n    };\n    fetchUserData();\n  }, []); // Only run once when the component mounts\n\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Username: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Highscore: \", highscore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfile, \"9QMPMztgVorhenBdzgCqSTUDHbA=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["useState","useEffect","getAuth","getFirestore","doc","getDoc","jsxDEV","_jsxDEV","UserProfile","_s","username","setUsername","highscore","setHighscore","loading","setLoading","fetchUserData","auth","db","user","currentUser","userRef","uid","docSnap","exists","userData","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/charliemclaughlin/Desktop/Programming/GitHub/piggle/src/components/UserProfile.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\"; // Firestore functions\n\nconst UserProfile = () => {\n    const [username, setUsername] = useState(\"\");\n    const [highscore, setHighscore] = useState(0);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const auth = getAuth();\n            const db = getFirestore();\n            const user = auth.currentUser;\n\n            if (user) {\n                const userRef = doc(db, \"users\", user.uid);\n                const docSnap = await getDoc(userRef);\n\n                if (docSnap.exists()) {\n                    const userData = docSnap.data();\n                    setUsername(userData.username);\n                    setHighscore(userData.highscore);\n                } else {\n                    console.log(\"User document not found\");\n                }\n            }\n\n            setLoading(false);\n        };\n\n        fetchUserData();\n    }, []); // Only run once when the component mounts\n\n    return loading ? <div>Loading...</div> : (\n        <div>\n            <h2>Username: {username}</h2>\n            <h3>Highscore: {highscore}</h3>\n        </div>\n    );\n};\n\nexport default UserProfile;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,IAAI,GAAGf,OAAO,CAAC,CAAC;MACtB,MAAMgB,EAAE,GAAGf,YAAY,CAAC,CAAC;MACzB,MAAMgB,IAAI,GAAGF,IAAI,CAACG,WAAW;MAE7B,IAAID,IAAI,EAAE;QACN,MAAME,OAAO,GAAGjB,GAAG,CAACc,EAAE,EAAE,OAAO,EAAEC,IAAI,CAACG,GAAG,CAAC;QAC1C,MAAMC,OAAO,GAAG,MAAMlB,MAAM,CAACgB,OAAO,CAAC;QAErC,IAAIE,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;UAClB,MAAMC,QAAQ,GAAGF,OAAO,CAACG,IAAI,CAAC,CAAC;UAC/Bf,WAAW,CAACc,QAAQ,CAACf,QAAQ,CAAC;UAC9BG,YAAY,CAACY,QAAQ,CAACb,SAAS,CAAC;QACpC,CAAC,MAAM;UACHe,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QAC1C;MACJ;MAEAb,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAOF,OAAO,gBAAGP,OAAA;IAAAsB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,gBAClC1B,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,GAAI,YAAU,EAACnB,QAAQ;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7B1B,OAAA;MAAAsB,QAAA,GAAI,aAAW,EAACjB,SAAS;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CACR;AACL,CAAC;AAACxB,EAAA,CApCID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\"; // Import Firestore functions\nimport app from \"./firebaseConfig\";\nconst auth = getAuth(app);\nconst db = getFirestore(app); // Get Firestore instance\n\n// Sign up function\nexport const Signup = async (email, password, username) => {\n  try {\n    // Create user with email and password\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Create a new user document in Firestore with the user's UID\n    await setDoc(doc(db, \"users\", user.uid), {\n      email: user.email,\n      username: username,\n      highscore: 0 // Initial highscore (can be updated later)\n    });\n    return user;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// Login function\n_c = Signup;\nexport const login = (email, password) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};\n\n// Logout function\nexport const logout = () => {\n  return signOut(auth);\n};\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","getFirestore","doc","setDoc","app","auth","db","Signup","email","password","username","userCredential","user","uid","highscore","error","Error","message","_c","login","logout","$RefreshReg$"],"sources":["/Users/charliemclaughlin/Desktop/Programming/GitHub/piggle/src/components/Signup.js"],"sourcesContent":["import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\";  // Import Firestore functions\nimport app from \"./firebaseConfig\";\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);  // Get Firestore instance\n\n// Sign up function\nexport const Signup = async (email, password, username) => {\n    try {\n        // Create user with email and password\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n\n        // Create a new user document in Firestore with the user's UID\n        await setDoc(doc(db, \"users\", user.uid), {\n            email: user.email,\n            username: username,\n            highscore: 0,  // Initial highscore (can be updated later)\n        });\n\n        return user;\n    } catch (error) {\n        throw new Error(error.message);\n    }\n};\n\n// Login function\nexport const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n};\n\n// Logout function\nexport const logout = () => {\n    return signOut(auth);\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,0BAA0B,EAAEC,8BAA8B,EAAEC,OAAO,QAAQ,eAAe;AAC5G,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB,CAAC,CAAE;AACjE,OAAOC,GAAG,MAAM,kBAAkB;AAElC,MAAMC,IAAI,GAAGR,OAAO,CAACO,GAAG,CAAC;AACzB,MAAME,EAAE,GAAGL,YAAY,CAACG,GAAG,CAAC,CAAC,CAAE;;AAE/B;AACA,OAAO,MAAMG,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACA;IACA,MAAMC,cAAc,GAAG,MAAMZ,8BAA8B,CAACM,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;IAClF,MAAMG,IAAI,GAAGD,cAAc,CAACC,IAAI;;IAEhC;IACA,MAAMT,MAAM,CAACD,GAAG,CAACI,EAAE,EAAE,OAAO,EAAEM,IAAI,CAACC,GAAG,CAAC,EAAE;MACrCL,KAAK,EAAEI,IAAI,CAACJ,KAAK;MACjBE,QAAQ,EAAEA,QAAQ;MAClBI,SAAS,EAAE,CAAC,CAAG;IACnB,CAAC,CAAC;IAEF,OAAOF,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAClC;AACJ,CAAC;;AAED;AAAAC,EAAA,GAnBaX,MAAM;AAoBnB,OAAO,MAAMY,KAAK,GAAGA,CAACX,KAAK,EAAEC,QAAQ,KAAK;EACtC,OAAOX,0BAA0B,CAACO,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;AAC5D,CAAC;;AAED;AACA,OAAO,MAAMW,MAAM,GAAGA,CAAA,KAAM;EACxB,OAAOpB,OAAO,CAACK,IAAI,CAAC;AACxB,CAAC;AAAC,IAAAa,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
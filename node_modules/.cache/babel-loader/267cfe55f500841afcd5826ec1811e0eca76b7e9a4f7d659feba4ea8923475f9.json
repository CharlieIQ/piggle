{"ast":null,"code":"import{getAuth,signInWithEmailAndPassword,createUserWithEmailAndPassword,signOut}from\"firebase/auth\";import{getFirestore,doc,setDoc}from\"firebase/firestore\";// Import Firestore functions\nimport app from\"./firebaseConfig\";const auth=getAuth(app);const db=getFirestore(app);// Get Firestore instance\n// Sign up function\nexport const signUp=async(email,password,username)=>{try{// Create user with email and password\nconst userCredential=await createUserWithEmailAndPassword(auth,email,password);const user=userCredential.user;// Create a new user document in Firestore with the user's UID\nawait setDoc(doc(db,\"users\",user.uid),{email:user.email,username:username,highscore:0// Initial highscore (can be updated later)\n});return user;}catch(error){throw new Error(error.message);}};// Login function\nexport const login=(email,password)=>{return signInWithEmailAndPassword(auth,email,password);};// Logout function\nexport const logout=()=>{return signOut(auth);};","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","getFirestore","doc","setDoc","app","auth","db","signUp","email","password","username","userCredential","user","uid","highscore","error","Error","message","login","logout"],"sources":["/Users/charliemclaughlin/Desktop/Programming/GitHub/piggle/src/auth.js"],"sourcesContent":["import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\";  // Import Firestore functions\nimport app from \"./firebaseConfig\";\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);  // Get Firestore instance\n\n// Sign up function\nexport const signUp = async (email, password, username) => {\n    try {\n        // Create user with email and password\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n\n        // Create a new user document in Firestore with the user's UID\n        await setDoc(doc(db, \"users\", user.uid), {\n            email: user.email,\n            username: username,\n            highscore: 0,  // Initial highscore (can be updated later)\n        });\n\n        return user;\n    } catch (error) {\n        throw new Error(error.message);\n    }\n};\n\n// Login function\nexport const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n};\n\n// Logout function\nexport const logout = () => {\n    return signOut(auth);\n};\n\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,0BAA0B,CAAEC,8BAA8B,CAAEC,OAAO,KAAQ,eAAe,CAC5G,OAASC,YAAY,CAAEC,GAAG,CAAEC,MAAM,KAAQ,oBAAoB,CAAG;AACjE,MAAO,CAAAC,GAAG,KAAM,kBAAkB,CAElC,KAAM,CAAAC,IAAI,CAAGR,OAAO,CAACO,GAAG,CAAC,CACzB,KAAM,CAAAE,EAAE,CAAGL,YAAY,CAACG,GAAG,CAAC,CAAG;AAE/B;AACA,MAAO,MAAM,CAAAG,MAAM,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,CAAEC,QAAQ,GAAK,CACvD,GAAI,CACA;AACA,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAZ,8BAA8B,CAACM,IAAI,CAAEG,KAAK,CAAEC,QAAQ,CAAC,CAClF,KAAM,CAAAG,IAAI,CAAGD,cAAc,CAACC,IAAI,CAEhC;AACA,KAAM,CAAAT,MAAM,CAACD,GAAG,CAACI,EAAE,CAAE,OAAO,CAAEM,IAAI,CAACC,GAAG,CAAC,CAAE,CACrCL,KAAK,CAAEI,IAAI,CAACJ,KAAK,CACjBE,QAAQ,CAAEA,QAAQ,CAClBI,SAAS,CAAE,CAAI;AACnB,CAAC,CAAC,CAEF,MAAO,CAAAF,IAAI,CACf,CAAE,MAAOG,KAAK,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC,CAClC,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,KAAK,CAAGA,CAACV,KAAK,CAAEC,QAAQ,GAAK,CACtC,MAAO,CAAAX,0BAA0B,CAACO,IAAI,CAAEG,KAAK,CAAEC,QAAQ,CAAC,CAC5D,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,MAAM,CAAGA,CAAA,GAAM,CACxB,MAAO,CAAAnB,OAAO,CAACK,IAAI,CAAC,CACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
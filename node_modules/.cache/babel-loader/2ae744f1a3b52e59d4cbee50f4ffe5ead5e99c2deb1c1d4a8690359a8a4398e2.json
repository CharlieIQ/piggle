{"ast":null,"code":"var _jsxFileName = \"/Users/charliemclaughlin/Desktop/Programming/GitHub/piggle/src/components/TopScore.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore, collection, query, orderBy, limit, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopScore = () => {\n  _s();\n  const [topScore, setTopScore] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTopScore = async () => {\n      const db = getFirestore();\n\n      // Query to get the highest score across all users\n      const usersRef = collection(db, \"users\");\n      const q = query(usersRef, orderBy(\"highscore\", \"desc\"), limit(1)); // Order by highscore (desc) and get the top 1 user\n\n      try {\n        const querySnapshot = await getDocs(q);\n        if (!querySnapshot.empty) {\n          const topUser = querySnapshot.docs[0].data();\n          setTopScore(topUser.highscore);\n        } else {\n          console.log(\"No users found.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching top score:\", error);\n      }\n      setLoading(false);\n    };\n    fetchTopScore();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: topScore !== null ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Global Top Score: \", topScore, \" held by \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No top score available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(TopScore, \"/bCbT+R77GDZO+mlJ/aZoaBO90g=\");\n_c = TopScore;\nexport default TopScore;\nvar _c;\n$RefreshReg$(_c, \"TopScore\");","map":{"version":3,"names":["useState","useEffect","getAuth","getFirestore","collection","query","orderBy","limit","getDocs","jsxDEV","_jsxDEV","TopScore","_s","topScore","setTopScore","loading","setLoading","fetchTopScore","db","usersRef","q","querySnapshot","empty","topUser","docs","data","highscore","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/charliemclaughlin/Desktop/Programming/GitHub/piggle/src/components/TopScore.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore, collection, query, orderBy, limit, getDocs } from \"firebase/firestore\";\n\nconst TopScore = () => {\n    const [topScore, setTopScore] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchTopScore = async () => {\n            const db = getFirestore();\n\n            // Query to get the highest score across all users\n            const usersRef = collection(db, \"users\");\n            const q = query(usersRef, orderBy(\"highscore\", \"desc\"), limit(1)); // Order by highscore (desc) and get the top 1 user\n\n            try {\n                const querySnapshot = await getDocs(q);\n                if (!querySnapshot.empty) {\n                    const topUser = querySnapshot.docs[0].data();\n                    setTopScore(topUser.highscore);\n                } else {\n                    console.log(\"No users found.\");\n                }\n            } catch (error) {\n                console.error(\"Error fetching top score:\", error);\n            }\n            setLoading(false);\n        };\n\n        fetchTopScore();\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n\n    return (\n        <div>\n            {topScore !== null ? (\n                <h2>Global Top Score: {topScore} held by {}</h2>\n            ) : (\n                <p>No top score available</p>\n            )}\n        </div>\n    );\n};\n\nexport default TopScore;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,EAAE,GAAGf,YAAY,CAAC,CAAC;;MAEzB;MACA,MAAMgB,QAAQ,GAAGf,UAAU,CAACc,EAAE,EAAE,OAAO,CAAC;MACxC,MAAME,CAAC,GAAGf,KAAK,CAACc,QAAQ,EAAEb,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEnE,IAAI;QACA,MAAMc,aAAa,GAAG,MAAMb,OAAO,CAACY,CAAC,CAAC;QACtC,IAAI,CAACC,aAAa,CAACC,KAAK,EAAE;UACtB,MAAMC,OAAO,GAAGF,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;UAC5CX,WAAW,CAACS,OAAO,CAACG,SAAS,CAAC;QAClC,CAAC,MAAM;UACHC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAClC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;MACAb,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAAoB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,oBACIxB,OAAA;IAAAoB,QAAA,EACKjB,QAAQ,KAAK,IAAI,gBACdH,OAAA;MAAAoB,QAAA,GAAI,oBAAkB,EAACjB,QAAQ,EAAC,WAAS;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEhDxB,OAAA;MAAAoB,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CAxCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
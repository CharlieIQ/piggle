{"ast":null,"code":"var _jsxFileName = \"/Users/charliemclaughlin/Desktop/Programming/JavaScript/Piggle/piggle/src/PiggleGame.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PiggleGame() {\n  _s();\n  const canvasRef = useRef(null);\n  const ballRef = useRef({\n    x: 200,\n    y: 50,\n    dx: 0,\n    dy: 0,\n    radius: 10,\n    launched: false\n  });\n  const pegs = useRef([{\n    x: 150,\n    y: 300,\n    radius: 10\n  }, {\n    x: 250,\n    y: 350,\n    radius: 10\n  }, {\n    x: 200,\n    y: 400,\n    radius: 10\n  }]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    let animationFrameId;\n    const drawCannon = () => {\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(ballRef.current.x - 10, ballRef.current.y - 20, 20, 20);\n    };\n    const drawBall = () => {\n      ctx.beginPath();\n      ctx.arc(ballRef.current.x, ballRef.current.y, ballRef.current.radius, 0, Math.PI * 2);\n      ctx.fillStyle = \"red\";\n      ctx.fill();\n      ctx.closePath();\n    };\n    const drawPegs = () => {\n      pegs.current.forEach(peg => {\n        ctx.beginPath();\n        ctx.arc(peg.x, peg.y, peg.radius, 0, Math.PI * 2);\n        ctx.fillStyle = \"blue\";\n        ctx.fill();\n        ctx.closePath();\n      });\n    };\n    const handleCollisions = () => {\n      pegs.current.forEach(peg => {\n        const dx = ballRef.current.x - peg.x;\n        const dy = ballRef.current.y - peg.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < ballRef.current.radius + peg.radius) {\n          // Normalize collision direction\n          const normalX = dx / distance;\n          const normalY = dy / distance;\n\n          // Reflect velocity along the normal\n          const dotProduct = ballRef.current.dx * normalX + ballRef.current.dy * normalY;\n          ballRef.current.dx -= 2 * dotProduct * normalX;\n          ballRef.current.dy -= 2 * dotProduct * normalY;\n        }\n      });\n    };\n    const updateBall = () => {\n      let ball = ballRef.current;\n      if (ball.launched) {\n        ball.dy += 0.1; // Gravity\n        ball.x += ball.dx;\n        ball.y += ball.dy;\n\n        // Bounce off walls\n        if (ball.x - ball.radius < 0 || ball.x + ball.radius > canvas.width) {\n          ball.dx *= -1;\n        }\n\n        // Bounce off floor\n        if (ball.y + ball.radius > canvas.height) {\n          ball.dy *= -0.8; // Energy loss\n          ball.y = canvas.height - ball.radius;\n        }\n        handleCollisions();\n      }\n    };\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawCannon();\n      drawPegs();\n      drawBall();\n      updateBall();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => cancelAnimationFrame(animationFrameId);\n  }, []);\n  const launchBall = () => {\n    if (!ballRef.current.launched) {\n      ballRef.current.dx = (Math.random() - 0.5) * 2; // Small random left/right variation\n      ballRef.current.dy = 5; // Launch downward\n      ballRef.current.launched = true;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 400,\n      height: 500,\n      className: \"border\",\n      onClick: launchBall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(PiggleGame, \"e8k16Uv45hdvJsmiWRwjRMKhAAI=\");\n_c = PiggleGame;\nvar _c;\n$RefreshReg$(_c, \"PiggleGame\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","PiggleGame","_s","canvasRef","ballRef","x","y","dx","dy","radius","launched","pegs","canvas","current","ctx","getContext","animationFrameId","drawCannon","fillStyle","fillRect","drawBall","beginPath","arc","Math","PI","fill","closePath","drawPegs","forEach","peg","handleCollisions","distance","sqrt","normalX","normalY","dotProduct","updateBall","ball","width","height","animate","clearRect","requestAnimationFrame","cancelAnimationFrame","launchBall","random","children","ref","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/charliemclaughlin/Desktop/Programming/JavaScript/Piggle/piggle/src/PiggleGame.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport default function PiggleGame() {\n  const canvasRef = useRef(null);\n  const ballRef = useRef({\n    x: 200, y: 50, dx: 0, dy: 0, radius: 10, launched: false\n  });\n  const pegs = useRef([\n    { x: 150, y: 300, radius: 10 },\n    { x: 250, y: 350, radius: 10 },\n    { x: 200, y: 400, radius: 10 }\n  ]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    let animationFrameId;\n\n    const drawCannon = () => {\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(ballRef.current.x - 10, ballRef.current.y - 20, 20, 20);\n    };\n\n    const drawBall = () => {\n      ctx.beginPath();\n      ctx.arc(ballRef.current.x, ballRef.current.y, ballRef.current.radius, 0, Math.PI * 2);\n      ctx.fillStyle = \"red\";\n      ctx.fill();\n      ctx.closePath();\n    };\n\n    const drawPegs = () => {\n      pegs.current.forEach(peg => {\n        ctx.beginPath();\n        ctx.arc(peg.x, peg.y, peg.radius, 0, Math.PI * 2);\n        ctx.fillStyle = \"blue\";\n        ctx.fill();\n        ctx.closePath();\n      });\n    };\n\n    const handleCollisions = () => {\n      pegs.current.forEach(peg => {\n        const dx = ballRef.current.x - peg.x;\n        const dy = ballRef.current.y - peg.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < ballRef.current.radius + peg.radius) {\n          // Normalize collision direction\n          const normalX = dx / distance;\n          const normalY = dy / distance;\n\n          // Reflect velocity along the normal\n          const dotProduct = ballRef.current.dx * normalX + ballRef.current.dy * normalY;\n          ballRef.current.dx -= 2 * dotProduct * normalX;\n          ballRef.current.dy -= 2 * dotProduct * normalY;\n        }\n      });\n    };\n\n    const updateBall = () => {\n      let ball = ballRef.current;\n      if (ball.launched) {\n        ball.dy += 0.1; // Gravity\n        ball.x += ball.dx;\n        ball.y += ball.dy;\n\n        // Bounce off walls\n        if (ball.x - ball.radius < 0 || ball.x + ball.radius > canvas.width) {\n          ball.dx *= -1;\n        }\n\n        // Bounce off floor\n        if (ball.y + ball.radius > canvas.height) {\n          ball.dy *= -0.8; // Energy loss\n          ball.y = canvas.height - ball.radius;\n        }\n\n        handleCollisions();\n      }\n    };\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawCannon();\n      drawPegs();\n      drawBall();\n      updateBall();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    animate();\n    return () => cancelAnimationFrame(animationFrameId);\n  }, []);\n\n  const launchBall = () => {\n    if (!ballRef.current.launched) {\n      ballRef.current.dx = (Math.random() - 0.5) * 2; // Small random left/right variation\n      ballRef.current.dy = 5; // Launch downward\n      ballRef.current.launched = true;\n    }\n  };\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={400} height={500} className=\"border\" onClick={launchBall} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}